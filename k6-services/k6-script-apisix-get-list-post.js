// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import { group } from "k6";

export const options = {
  maxRedirects: 4,
  thresholds: {
    http_req_failed: ["rate<0.02"], // http errors should be less than 2%
    http_req_duration: ["p(95)<2000"], // 95% requests should be below 2s
  },
  scenarios: {
    constant_request_rate: {
      executor: "constant-arrival-rate",
      rate: 1000,
      timeUnit: "1s", // 1000 iterations per second, i.e. 1000 RPS
      duration: "5m",
      preAllocatedVUs: 10, // how large the initial pool of VUs would be
      maxVUs: 100, // if the preAllocatedVUs are not enough, we can initialize more
    },
  },
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    "base_url.kong": "http://127.0.0.1:8000",
    "base_url.post-be": "http://post-backend:4000",
    "base_url.comment-be": "http://comment-backend:4001",
    "base_url.apisix": "http://docker-apisix-apisix-1:9080",
  },
});

export default function () {
  group("APISIX BACKEND", function () {
    group("POST", function () {
      postman[Request]({
        name: "Get List Post",
        id: "0d9a384a-d18f-4cfb-81e0-78f3096a48e2",
        method: "GET",
        address: "{{base_url.apisix}}/post",
        post(response) {
          const responseJSON = pm.response.json();

          pm.test("Status code is 200", function () {
            pm.response.to.have.status(200);
          });

          pm.test("Save Latest Response", function () {
            const post = responseJSON.results[0];
            if (post.id !== "") {
              pm.environment.set(
                "backend.get.post.response-body.latest",
                JSON.stringify(post)
              );
            }
            pm.response.to.have.status(200);
          });
        },
      });
    });
  });
}
